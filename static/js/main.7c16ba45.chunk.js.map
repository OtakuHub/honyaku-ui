{"version":3,"sources":["history.js","helper/navigation.js","components/WorkCard/index.js","components/WorkCardList/index.js","services/api.js","services/queries/homePage.js","components/Loading/index.js","pages/Home/index.js","pages/Work/index.js","components/Filter/index.js","components/Sorting/index.js","services/queries/categoryPage.js","pages/Category/index.js","services/queries/searchPage.js","pages/Search/index.js","components/Login/index.js","components/SignUp/index.js","components/AuthNav/index.js","components/Navbar/index.js","components/SearchButton/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","basename","handleNavigation","event","preventDefault","url","target","dataset","history","push","WorkCard","id","title","coverImage","description","genres","Card","style","minWidth","marginTop","cursor","Img","height","objectFit","variant","src","Body","Title","Subtitle","Text","dangerouslySetInnerHTML","__html","substring","Link","href","data-url","onClick","WorkCardList","workList","Row","map","work","Col","key","romaji","large","join","axios","create","baseURL","getTrendingForHomepage","a","api","post","query","response","error","anime","data","media","manga","lightnovel","hasLoaded","Loading","className","Spinner","animation","role","Home","useState","setResponse","useEffect","res","getTrendingMedia","message","Work","props","image","cellSpacing","alt","type","action","htmlFor","Filter","value","displayName","filters","name","filter","Sort","sortOptions","sorts","getCategoryWork","mediaType","variables","results","Page","Category","params","match","location","workType","categoryName","toUpperCase","Jumbotron","Container","getSearchResults","search","Search","setQuery","handleSearch","searchQuery","URLSearchParams","get","getSearchQueryFromURL","Login","email","setEmail","password","setPassword","checked","setChecked","Form","onSubmit","alert","Group","controlId","Label","Control","onChange","placeholder","Check","label","Button","to","Signup","username","setUsername","confirmPassword","setConfirmPassword","AuthNav","loggedIn","show","setShow","handleClose","Nav","Modal","onHide","Header","closeButton","Tabs","tabPosition","tabBarGutter","flex","flexDirection","width","defaultActiveKey","Tab","eventKey","Footer","NavigationBar","link","categories","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","category","SearchButton","App","fluid","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7c16ba45.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({ basename: '/honyaku-ui' });\n","import history from '../history';\n\nconst handleNavigation = (event) => {\n  event.preventDefault();\n  const { url } = event.target.dataset;\n  history.push(url);\n};\n\nexport default handleNavigation;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport handleNavigation from '../../helper/navigation';\n\nconst WorkCard = ({ id, title, coverImage, description, genres }) => (\n  <Card style={{ minWidth: '15rem', marginTop: '1rem', cursor: 'pointer' }}>\n    <Card.Img\n      style={{ height: '15rem', objectFit: 'cover' }}\n      variant=\"top\"\n      src={coverImage}\n    />\n    <Card.Body>\n      <Card.Title>\n        {title}\n      </Card.Title>\n      <Card.Subtitle>\n        {genres}\n      </Card.Subtitle>\n      <Card.Text\n        dangerouslySetInnerHTML={{ __html: description.substring(0, 100) }}\n      />\n      <Card.Link\n        href=\"#\"\n        data-url={`/work/${id}`}\n        onClick={handleNavigation}\n      >\n        Read More\n      </Card.Link>\n    </Card.Body>\n  </Card>\n);\n\nexport default WorkCard;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport WorkCard from '../WorkCard';\n\nconst WorkCardList = ({ workList }) => (\n  <Row>\n    {workList.map((work) => (\n      <Col key={work.id}>\n        <WorkCard\n          key={work.id}\n          id={work.id}\n          title={work.title.romaji}\n          coverImage={work.coverImage.large}\n          genres={work.genres.join(', ')}\n          description={work.description}\n        />\n      </Col>\n    ))}\n  </Row>\n);\n\nexport default WorkCardList;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://graphql.anilist.co',\n});\n","import api from '../api';\n\nconst query = `\nquery {\n  anime: Page(perPage: 5) {\n    media(type: ANIME sort: TRENDING_DESC) {\n      ...cardFieldItems\n    }\n  }\n  manga: Page(perPage: 5) {\n    media(type: MANGA, sort:TRENDING_DESC) {\n     ...cardFieldItems\n    }\n  }\n  lightnovel: Page(perPage: 5) {\n    media(sort: TRENDING_DESC) {\n      ...cardFieldItems\n    }\n  }\n}\n\nfragment cardFieldItems on Media {\n  type\n  id\n  title {\n    romaji\n    english\n    native\n  }\n  coverImage {\n    large\n  }\n  genres\n  description(asHtml: true)\n}\n`;\n\nconst getTrendingForHomepage = async () => {\n  try {\n    const response = await api.post('/', { query });\n    return {\n      error: null,\n      anime: response.data.data.anime.media,\n      manga: response.data.data.manga.media,\n      lightnovel: response.data.data.lightnovel.media,\n      hasLoaded: true,\n    };\n  } catch (error) {\n    return {\n      error,\n      hasLoaded: true,\n    };\n  }\n};\n\nexport default getTrendingForHomepage;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './style.sass';\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <Spinner animation=\"grow\" role=\"status\" variant=\"primary\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport default Loading;\n","import React, { useState, useEffect } from 'react';\nimport WorkCardList from '../../components/WorkCardList';\nimport getTrendingForHomepage from '../../services/queries/homePage';\nimport Loading from '../../components/Loading';\nimport './style.sass';\n\nconst Home = () => {\n  const [response, setResponse] = useState({\n    error: null,\n    hasLoaded: false,\n  });\n\n  useEffect(() => {\n    const getTrendingMedia = async () => {\n      const res = await getTrendingForHomepage();\n      setResponse({ ...res });\n    };\n\n    getTrendingMedia();\n  }, []);\n\n  if (!response.hasLoaded) {\n    return (<Loading />);\n  }\n\n  if (response.error) {\n    return (<p>{response.error.message}</p>);\n  }\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h4>Light Novels</h4>\n        <WorkCardList workList={response.lightnovel} />\n      </div>\n      <div className=\"section\">\n        <h4>Manga</h4>\n        <WorkCardList workList={response.manga} />\n      </div>\n      <div className=\"section\">\n        <h4>Anime</h4>\n        <WorkCardList workList={response.anime} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\n\nconst Work = (props) => {\n  const [work] = useState({\n    title: 'Gintama',\n    image: 'https://m.media-amazon.com/images/M/MV5BMDkxZTJjZTEtMDRjMy00Yzk1LWI5YjItMjIwYmVlYzhlZWZhXkEyXkFqcGdeQXVyNDQxNjcxNQ@@._V1_UY1200_CR85,0,630,1200_AL_.jpg',\n    description: 'The Amanto, aliens from outer space,... ',\n    genres: [\n      'Drama',\n      'Comedy',\n      'Action',\n    ],\n  });\n\n  return (\n    <div>\n      <table cellSpacing=\"30\">\n        <tr>\n          <td>\n            <img src={work.image} alt=\"Gintama Anime Poster\" />\n          </td>\n          <td>\n            <h1>{work.title}</h1>\n            <p>\n              <center>\n                {work.description}\n              </center>\n            </p>\n            <center>\n              <h4>\n                <p>Genres</p>\n              </h4>\n            </center>\n            <center>\n              <p>\n                {work.genres.join(', ')}\n              </p>\n            </center>\n            <button type=\"button\">\n              Join as Translator\n            </button>\n          </td>\n        </tr>\n      </table>\n      <hr />\n      <h2>Comment Section</h2>\n      <form action=\"#\">\n        <label htmlFor=\"comment\">\n          Your comment:\n        </label>\n        <input type=\"text\" id=\"comment\" />\n        <button type=\"submit\">\n          Submit\n        </button>\n      </form>\n      <p>\n        Click the Submit button and your comment will be posted.\n      </p>\n    </div>\n  );\n};\n\nexport default Work;\n","import React, { useState } from 'react';\n\nconst Filter = () => {\n  const [filters] = useState([\n    { value: 'genre', displayName: 'Select Genre' },\n    { value: 'action', displayName: 'Action' },\n    { value: 'adventure', displayName: 'Adventure' },\n    { value: 'comedy', displayName: 'Comdey' },\n    { value: 'drama', displayName: 'Drama' },\n    { value: 'isekai', displayName: 'Isekai' },\n    { value: 'romance', displayName: 'Romance' },\n    { value: 'thriller', displayName: 'Thriller' },\n  ]);\n\n  return (\n    <div>\n      <label htmlFor=\"filter\">Filter</label>\n      <select name=\"filter\" id=\"genrefilter\">\n        {filters.map((filter) => (\n          <option value={filter.value}>{filter.displayName}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\n\nconst Sort = () => {\n  const [sortOptions] = useState([\n    { value: 'defult', displayName: 'Default' },\n    { value: 'date', displayName: 'Date' },\n    { value: 'liked', displayName: 'Most Liked' },\n    { value: 'followed', displayName: 'Most Followed' },\n  ]);\n\n  return (\n    <div>\n      <label htmlFor=\"sorting\">Sort</label>\n      <select name=\"sorting\" id=\"sort\">\n        {sortOptions.map((sorts) => (\n          <option value={sorts.value}>{sorts.displayName}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Sort;\n","import api from '../api';\n\nconst query = `\n  query($mediaType: MediaType) {\n    Page(perPage: 20) {\n      media(type: $mediaType, sort: TRENDING_DESC) {\n        type\n        id\n        title {\n          romaji\n          english\n          native\n        }\n        coverImage {\n          large\n        }\n        genres\n        description(asHtml: true)\n      }\n    }\n  }\n`;\n\nconst getCategoryWork = async (mediaType) => {\n  try {\n    const variables = { mediaType };\n    const response = await api.post('/', {\n      query,\n      variables,\n    });\n    return {\n      error: null,\n      results: response.data.data.Page.media,\n      hasLoaded: true,\n    };\n  } catch (error) {\n    return {\n      error,\n      hasLoaded: true,\n    };\n  }\n};\n\nexport default getCategoryWork;\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport Loading from '../../components/Loading';\nimport Filter from '../../components/Filter';\nimport Sort from '../../components/Sorting';\nimport WorkCardList from '../../components/WorkCardList';\nimport getCategoryWork from '../../services/queries/categoryPage';\nimport './style.sass';\n\nconst Category = ({ match: { params }, location }) => {\n  const [response, setResponse] = useState({\n    error: null,\n    hasLoaded: false,\n  });\n\n  useEffect(() => {\n    const getTrendingMedia = async () => {\n      const workType = params.categoryName.toUpperCase();\n      const res = await getCategoryWork(workType);\n      setResponse({ ...res });\n    };\n\n    getTrendingMedia();\n  }, [params.categoryName]);\n\n  if (!response.hasLoaded) {\n    return (<Loading />);\n  }\n\n  if (response.error) {\n    return (<p>{response.error.message}</p>);\n  }\n\n  return (\n    <div>\n      <Jumbotron>\n        <Container>\n          <h1>\n            {`Most trending: ${params.categoryName}`}\n          </h1>\n        </Container>\n      </Jumbotron>\n      <Filter />\n      <Sort />\n      <WorkCardList workList={response.results} />\n    </div>\n  );\n};\n\nexport default Category;\n","import api from '../api';\n\nconst query = `\n  query($search: String) {\n    Page(perPage: 10) {\n      media(search: $search) {\n        id\n        title {\n          romaji\n          english\n          native\n        }\n        coverImage {\n          large\n        }\n        genres\n        description(asHtml: true)\n      }\n    }\n  }\n`;\n\nconst getSearchResults = async (search) => {\n  try {\n    const variables = { search };\n    const response = await api.post('/', {\n      query,\n      variables,\n    });\n    return {\n      error: null,\n      results: response.data.data.Page.media,\n      hasLoaded: true,\n    };\n  } catch (error) {\n    return {\n      error,\n      hasLoaded: true,\n    };\n  }\n};\n\nexport default getSearchResults;\n","import React, { useState, useEffect } from 'react';\nimport Loading from '../../components/Loading';\nimport WorkCardList from '../../components/WorkCardList';\nimport getSearchResults from '../../services/queries/searchPage';\n\nconst Search = ({ location }) => {\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState([{\n    error: null,\n    hasLoaded: false,\n  }]);\n\n  useEffect(() => {\n    const handleSearch = async () => {\n      const res = await getSearchResults(query);\n      setResponse({ ...res });\n    };\n\n    handleSearch();\n  }, [query]);\n\n  useEffect(() => {\n    const getSearchQueryFromURL = async () => {\n      const searchQuery = new URLSearchParams(location.search).get('query');\n      setQuery(searchQuery);\n    };\n\n    getSearchQueryFromURL();\n  }, [location.search]);\n\n  if (!response.hasLoaded) {\n    return (<Loading />);\n  }\n  if (response.error) {\n    return (<p>{response.error.message}</p>);\n  }\n  return (\n    <div className=\"\">\n      <h4>\n        Search Results:\n        <span>{query}</span>\n      </h4>\n      <WorkCardList workList={response.results} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [checked, setChecked] = useState(false);\n\n  const handleSubmit = (event) => {\n    alert(`Username ${email} has logged in.`);\n    event.preventDefault();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Username/Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          placeholder=\"Enter username or email address\"\n          name=\"email\"\n        />\n        <Form.Text className=\"text-muted\">\n          We&apos;ll never share you email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.password)}\n          placeholder=\"Enter password\"\n          name=\"password\"\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicCheckBox\">\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Remember Me\"\n          value={checked}\n          onChange={(event) => setChecked(event.target.checked)}\n          name=\"checked\"\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n\n      <Link to=\"/password\"> Forgot Password?</Link>\n    </Form>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\n\nconst Signup = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleSubmit = (event) => {\n    alert(`Username ${username} has signed up.`);\n    event.preventDefault();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder=\"Username\"\n          name=\"username\"\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email Address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          placeholder=\"Enter email\"\n          name=\"email\"\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n          placeholder=\"Enter password\"\n          name=\"password\"\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formConfirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(event) => setConfirmPassword(event.target.value)}\n          placeholder=\"Confirm password\"\n          name=\"confirmPassword\"\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n\n      <Link to=\"/singin\"> Already registered, Sign In?</Link>\n    </Form>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Button, Tab, Modal, Nav, Tabs } from 'react-bootstrap';\nimport Login from '../Login';\nimport Signup from '../SignUp';\n\nconst AuthNav = ({ loggedIn }) => {\n  const [show, setShow] = useState(false);\n\n  const handleShow = (event) => {\n    event.preventDefault();\n    setShow(true);\n  };\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Nav.Link href=\"#\" onClick={handleShow}>\n        {loggedIn ? 'Logout' : 'Signup'}\n      </Nav.Link>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login or Sign Up</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Tabs\n            tabPosition=\"top\"\n            tabBarGutter={100}\n            style={{\n              flex: 0,\n              flexDirection: 'row',\n              width: 50,\n            }}\n            id=\"controltab\"\n            defaultActiveKey=\"login\"\n          >\n            <Tab eventKey=\"login\" title=\"Login\">\n              <Login />\n            </Tab>\n            <Tab eventKey=\"signup\" title=\"Signup\">\n              <Signup />\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-danger\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AuthNav;\n","import React, { useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport AuthNav from '../AuthNav';\nimport handleNavigation from '../../helper/navigation';\nimport './style.sass';\n\nconst NavigationBar = () => {\n  const [loggedIn] = useState(false);\n  const [categories] = useState([\n    { link: '/category/anime', name: 'Anime' },\n    { link: '/category/manga', name: 'Manga' },\n    { link: '/category/lightnovel', name: 'Light Novel' },\n  ]);\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand\n        href=\"#\"\n        data-url=\"/\"\n        onClick={handleNavigation}\n      >\n        Honyaku\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {categories.map((category) => (\n            <Nav.Link\n              key={category.name}\n              href=\"#\"\n              data-url={category.link}\n              onClick={handleNavigation}\n            >\n              {category.name}\n            </Nav.Link>\n          ))}\n        </Nav>\n        <Nav className=\"justify-content-end\">\n          <AuthNav loggedIn={loggedIn} />\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavigationBar;\n","import React, { useState } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport history from '../../history';\nimport Filter from '../Filter';\nimport './style.sass';\n\nconst SearchButton = () => {\n  const [show, setShow] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    history.push(`/search?query=${query}`);\n    handleClose();\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"warning\"\n        className=\"search\"\n        onClick={handleShow}\n      >\n        Search\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Find what you are looking for</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formSearch\">\n              <Form.Label>\n                Search\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter an anime, manga or light novel title\"\n                value={query}\n                onChange={(event) => setQuery(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Filter />\n            </Form.Group>\n            <Button\n              variant=\"outline-success\"\n              type=\"submit\"\n              onClick={handleSubmit}\n            >\n              Search\n            </Button>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"outline-danger\"\n            onClick={handleClose}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SearchButton;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Home from '../../pages/Home';\nimport Work from '../../pages/Work';\nimport Category from '../../pages/Category';\nimport Search from '../../pages/Search';\nimport Navbar from '../Navbar';\nimport SearchButton from '../SearchButton';\nimport './style.sass';\n\nconst App = () => (\n  <div>\n    <Navbar />\n    <SearchButton />\n    <Container fluid=\"md\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/work/:id\" component={Work} />\n        <Route path=\"/category/:categoryName\" component={Category} />\n        <Route exact path=\"/search\" component={Search} />\n      </Switch>\n    </Container>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport history from './history';\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}