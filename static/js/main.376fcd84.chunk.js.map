{"version":3,"sources":["pages/Home/index.js","pages/Work/index.js","components/Filter/index.js","components/Sorting/index.js","pages/Category/index.js","pages/Search/index.js","components/Navbar/index.js","history.js","components/Search/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Home","props","state","Component","Work","work","title","image","description","genres","this","cellSpacing","src","alt","join","type","action","htmlFor","id","Filter","filterOptions","value","displayName","name","map","filters","Sort","sortOptions","sorts","Category","mostTreding","categoryList","img","params","match","categoryName","item","Search","query","getSearchQuery","prevProps","location","search","URLSearchParams","get","setState","NavigationBar","loggedIn","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","Nav","className","Link","createBrowserHistory","basename","handleShow","show","handleClose","handleSeach","target","handleSubmit","event","preventDefault","history","push","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","placeholder","onChange","Footer","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.376fcd84.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>honyaku ui</h1>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass Work extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      work: {\n        title: 'Gintama',\n        image: 'https://m.media-amazon.com/images/M/MV5BMDkxZTJjZTEtMDRjMy00Yzk1LWI5YjItMjIwYmVlYzhlZWZhXkEyXkFqcGdeQXVyNDQxNjcxNQ@@._V1_UY1200_CR85,0,630,1200_AL_.jpg',\n        description: 'The Amanto, aliens from outer space,... ',\n        genres: [\n          'Drama',\n          'Comedy',\n          'Action',\n        ],\n      },\n    };\n  }\n\n  render() {\n    const { work } = this.state;\n    return (\n      <div>\n        <table cellSpacing=\"30\">\n          <tr>\n            <td>\n              <img\n                src={work.image}\n                alt=\"Gintama Anime Poster\"\n              />\n            </td>\n            <td>\n              <h1>{work.title}</h1>\n              <p>\n                <center>\n                  {work.description}\n                </center>\n              </p>\n              <center>\n                <h4>\n                  <p>Genres</p>\n                </h4>\n              </center>\n              <center>\n                <p>\n                  {work.genres.join(', ')}\n                </p>\n              </center>\n              <button type=\"button\">\n                Join as Translator\n              </button>\n            </td>\n          </tr>\n        </table>\n        <hr />\n        <h2>Comment Section</h2>\n        <form action=\"#\">\n          <label htmlFor=\"comment\">\n            Your comment:\n          </label>\n          <input type=\"text\" id=\"comment\" />\n          <button type=\"submit\">\n            Submit\n          </button>\n        </form>\n        <p>\n          Click the Submit button and your comment will be posted.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import React, { Component } from 'react';\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterOptions: [\n        { value: 'genre', displayName: 'Select Genre' },\n        { value: 'action', displayName: 'Action' },\n        { value: 'adventure', displayName: 'Adventure' },\n        { value: 'comedy', displayName: 'Comdey' },\n        { value: 'drama', displayName: 'Drama' },\n        { value: 'isekai', displayName: 'Isekai' },\n        { value: 'romance', displayName: 'Romance' },\n        { value: 'thriller', displayName: 'Thriller' },\n      ],\n    };\n  }\n\n  render() {\n    const { filterOptions } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"filter\">Filter</label>\n        <select name=\"filter\" id=\"genrefilter\">\n          {filterOptions.map((filters) => (\n            <option value={filters.value}>{filters.displayName}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nclass Sort extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortOptions: [\n        { value: 'defult', displayName: 'Default' },\n        { value: 'date', displayName: 'Date' },\n        { value: 'liked', displayName: 'Most Liked' },\n        { value: 'followed', displayName: 'Most Followed' },\n      ],\n    };\n  }\n\n  render() {\n    const { sortOptions } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"sorting\">Sort</label>\n        <select name=\"sorting\" id=\"sort\">\n          {sortOptions.map((sorts) => (\n            <option value={sorts.value}>{sorts.displayName}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default Sort;\n","import React, { Component } from 'react';\nimport Filter from '../../components/Filter';\nimport Sort from '../../components/Sorting';\nimport './style.sass';\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mostTreding: [\n        'anime 1',\n        'anime 2',\n        'anime 3',\n        'anime 4',\n        'anime 5',\n      ],\n      categoryList: [\n        {\n          img: '',\n          title: '',\n          description: '',\n        },\n      ],\n    };\n  }\n\n  render() {\n    const { mostTreding, categoryList } = this.state;\n    const { match: { params } } = this.props;\n    return (\n      <div>\n        <h1>{params.categoryName}</h1>\n        <div>\n          <h2>Most Trending</h2>\n          {mostTreding.map((item) => (\n            <div>\n              <p>{item}</p>\n            </div>\n          ))}\n        </div>\n        <Filter />\n        <Sort />\n        <div>\n          {categoryList.map((item) => (\n            <div>\n              <figure>\n                <img src={item.img} alt=\"\" />\n                <figcaption>{item.title}</figcaption>\n              </figure>\n              <div>\n                <p>{item.description}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React, { Component } from 'react';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getSearchQuery();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.getSearchQuery();\n    }\n  }\n\n  getSearchQuery() {\n    const { search } = this.props.location;\n    const query = new URLSearchParams(search).get('query');\n    this.setState({ query });\n  }\n\n  render() {\n    const { query } = this.state;\n    return (\n      <h2>\n        Search Results:\n        <span>{query}</span>\n      </h2>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './style.sass';\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n    };\n  }\n\n  render() {\n    const { loggedIn } = this.state;\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            Honyaku\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link>\n              <Link to=\"/category/anime\">\n                Anime\n              </Link>\n            </Nav.Link>\n            <Nav.Link>\n              <Link to=\"/category/manga\">\n                manga\n              </Link>\n            </Nav.Link>\n            <Nav.Link>\n              <Link to=\"/category/lightnovel\">\n                Light Novel\n              </Link>\n            </Nav.Link>\n          </Nav>\n          <Nav className=\"justify-content-end\">\n            {loggedIn && (\n              <Nav.Link>\n                <Link to=\"/logout\">\n                  Logout\n                </Link>\n              </Nav.Link>\n            )}\n            {!loggedIn && (\n              <Nav.Link>\n                <Link to=\"/authentication\">\n                  Signup\n                </Link>\n              </Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavigationBar;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({ basename: '/honyaku-ui' });\n","import React, { Component } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport history from '../../history';\nimport Filter from '../Filter';\nimport './style.sass';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      query: '',\n    };\n  }\n\n  handleShow = () => this.setState({ show: true });\n\n  handleClose = () => this.setState({ show: false });\n\n  handleSeach = ({ target }) => {\n    this.setState({ query: `${target.value}` });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    history.push(`/search?query=${this.state.query}`);\n    this.handleClose();\n    this.setState({ query: '' });\n  }\n\n  render() {\n    const { show, query } = this.state;\n    return (\n      <div>\n        <Button\n          variant=\"outline-primary\"\n          className=\"search\"\n          onClick={this.handleShow}\n        >\n          Search\n        </Button>\n        <Modal show={show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Find what you are looking for</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formSearch\">\n                <Form.Label>\n                  Search\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter an anime, manga or light novel title\"\n                  value={query}\n                  onChange={this.handleSeach}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Filter />\n              </Form.Group>\n              <Button\n                variant=\"outline-success\"\n                type=\"submit\"\n                onClick={this.handleSubmit}\n              >\n                Search\n              </Button>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"outline-danger\"\n              onClick={this.handleClose}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../../pages/Home';\nimport Work from '../../pages/Work';\nimport Category from '../../pages/Category';\nimport Search from '../../pages/Search';\nimport Navbar from '../Navbar';\nimport SearchButton from '../Search';\nimport './style.sass';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <SearchButton />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/work/:id\" component={Work} />\n        <Route path=\"/category/:categoryName\" component={Category} />\n        <Route exact path=\"/search\" component={Search} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport history from './history';\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}